[{"D:\\stream project\\task4\\my-app\\src\\index.js":"1","D:\\stream project\\task4\\my-app\\src\\components\\app.js":"2","D:\\stream project\\task4\\my-app\\src\\components\\header.jsx":"3","D:\\stream project\\task4\\my-app\\src\\components\\stream\\deletestream.jsx":"4","D:\\stream project\\task4\\my-app\\src\\components\\stream\\editstream.jsx":"5","D:\\stream project\\task4\\my-app\\src\\components\\stream\\liststream.jsx":"6","D:\\stream project\\task4\\my-app\\src\\components\\stream\\createstream.jsx":"7","D:\\stream project\\task4\\my-app\\src\\components\\stream\\notfound.jsx":"8","D:\\stream project\\task4\\my-app\\src\\reducer\\index.jsx":"9","D:\\stream project\\task4\\my-app\\src\\components\\googlebutton.jsx":"10","D:\\stream project\\task4\\my-app\\src\\reducer\\authreducer.jsx":"11","D:\\stream project\\task4\\my-app\\src\\action\\type.jsx":"12","D:\\stream project\\task4\\my-app\\src\\action\\index.jsx":"13","D:\\stream project\\task4\\my-app\\src\\apis\\stream.jsx":"14","D:\\stream project\\task4\\my-app\\src\\reducer\\reducerstream.jsx":"15","D:\\stream project\\task4\\my-app\\src\\history.js":"16","D:\\stream project\\task4\\my-app\\src\\components\\stream\\formstream.jsx":"17","D:\\stream project\\task4\\my-app\\src\\components\\model.jsx":"18"},{"size":337,"mtime":1622688421531,"results":"19","hashOfConfig":"20"},{"size":1514,"mtime":1624074828974,"results":"21","hashOfConfig":"20"},{"size":544,"mtime":1623824200755,"results":"22","hashOfConfig":"20"},{"size":1556,"mtime":1624315598699,"results":"23","hashOfConfig":"20"},{"size":1017,"mtime":1624050132265,"results":"24","hashOfConfig":"20"},{"size":2294,"mtime":1624679847394,"results":"25","hashOfConfig":"20"},{"size":675,"mtime":1623986246700,"results":"26","hashOfConfig":"20"},{"size":159,"mtime":1622695085660,"results":"27","hashOfConfig":"20"},{"size":299,"mtime":1623555230012,"results":"28","hashOfConfig":"20"},{"size":1943,"mtime":1622869069686,"results":"29","hashOfConfig":"20"},{"size":363,"mtime":1622862686192,"results":"30","hashOfConfig":"20"},{"size":277,"mtime":1623550796243,"results":"31","hashOfConfig":"20"},{"size":1684,"mtime":1624076160803,"results":"32","hashOfConfig":"20"},{"size":106,"mtime":1623462737569,"results":"33","hashOfConfig":"20"},{"size":711,"mtime":1625277108476,"results":"34","hashOfConfig":"20"},{"size":87,"mtime":1623827041577,"results":"35","hashOfConfig":"20"},{"size":1604,"mtime":1623983581336,"results":"36","hashOfConfig":"20"},{"size":862,"mtime":1624077340849,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ngiybu",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\stream project\\task4\\my-app\\src\\index.js",[],["80","81"],"D:\\stream project\\task4\\my-app\\src\\components\\app.js",[],"D:\\stream project\\task4\\my-app\\src\\components\\header.jsx",[],"D:\\stream project\\task4\\my-app\\src\\components\\stream\\deletestream.jsx",["82"],"import Model from '../model'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FETCHSTREAM, DELETESTREAM } from '../../action/index';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport history from '../../history'\r\n\r\nclass DeleteStream extends React.Component {\r\n     componentDidMount() {\r\n          this.props.FETCHSTREAM(this.props.match.params.id)\r\n     }\r\n\r\n     rendercontent = () => {\r\n          if (this.props.stream) {\r\n               return (`Are you sure to delete this stream ${this.props.stream.title}`)\r\n          }\r\n          else {\r\n               return (`Are you sure to delete this stream`)\r\n          }\r\n     }\r\n\r\n     renderaction = () => {\r\n          return (\r\n               <>\r\n                    <div onClick={() => {\r\n                         this.props.DELETESTREAM(this.props.match.params.id)\r\n                    }} className=\"ui negative button\">Delete</div>\r\n\r\n                    <div onClick={() => { history.push('/') }} className=\"ui cancel button\">Cancel</div>\r\n               </>\r\n          )\r\n     }\r\n\r\n     render() {\r\n\r\n          return (\r\n               <div>\r\n\r\n                    <Model\r\n\r\n\r\n                         title={this.rendercontent()}\r\n                         action={this.renderaction()}\r\n\r\n\r\n                    />\r\n               </div>\r\n          );\r\n     }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n     return ({ stream: state.streams[ownProps.match.params.id] })\r\n}\r\n\r\nexport default connect(mapStateToProps, { FETCHSTREAM, DELETESTREAM })(DeleteStream);","D:\\stream project\\task4\\my-app\\src\\components\\stream\\editstream.jsx",[],"D:\\stream project\\task4\\my-app\\src\\components\\stream\\liststream.jsx",["83"],"import React, { Component } from 'react';\r\nimport {connect} from'react-redux';\r\nimport {FETCHSTREAMS} from'../../action/index';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Liststream extends Component {\r\n    \r\ncomponentDidMount(){\r\n  \r\n    \r\n    this.props.FETCHSTREAMS()\r\n    \r\n    \r\n}\r\n\r\n\r\nrenderadmin(stream){\r\n    if(stream){\r\n        if(stream.userId===this.props.currentUser){\r\n            return(\r\n        \r\n                <div className=\" ui \">\r\n                 <Link className=\"ui button primary ui right floated button \" to={`/stream/edit/${stream._id}`} >EDIT</Link>  \r\n                    <Link to={`/stream/delete/${stream._id}`}className=\"ui button negative right floated button\">DELETE</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n\r\n}\r\n\r\nrenderCreateButton({isSignin}){\r\n    if(isSignin===true){\r\n        return(<div>\r\n            \r\n            <Link to=\"/stream/new\">\r\n          \r\n            <button className={`ui button positive ui right floated button\r\n            \r\n            ${this.props.isSignin==false?'disable':''}\r\n            `}>  Create Stream</button>\r\n            \r\n            </Link>\r\n            </div>)\r\n    }\r\n   \r\n \r\n\r\n}\r\n\r\nrenderview(){\r\n\r\n    if(this.props.streams){\r\n       \r\n        return( this.props.streams.map((stream)=>{\r\n            return(\r\n      <div>\r\n      <div className=\"item\"  key={stream._id}>\r\n         {this.renderadmin(stream)}\r\n        <i className=\" large middle aligned icon camera\"></i>\r\n        <div className=\"content\">\r\n            \r\n            {stream.title}\r\n        <div className=\"description\">{stream.description}</div>\r\n      \r\n        </div>\r\n        \r\n       \r\n      </div>\r\n      \r\n      </div>\r\n            )\r\n          })) \r\n    }\r\n \r\n\r\n\r\n}\r\n\r\n    render() {\r\n \r\n       \r\n        return ( <div>\r\n            \r\n            <h2>Streams</h2>\r\n             <div  className=\" ui celled list\" >{this.renderview()}</div> \r\n             <div className=\"right floated\">{this.renderCreateButton(this.props)}</div>\r\n        </div> );\r\n    }\r\n   \r\n}\r\nconst mapStateToProps=(state)=>{\r\n\r\n    \r\nreturn{streams:Object.values(state.streams),\r\ncurrentUser:state.authReducer.userId,\r\nisSignin:state.authReducer.isSingIN\r\n}\r\n}\r\n \r\nexport default connect(mapStateToProps,{FETCHSTREAMS})(Liststream);\r\n","D:\\stream project\\task4\\my-app\\src\\components\\stream\\createstream.jsx",["84","85"],"import React, { Component } from 'react';\r\nimport{Field,reduxForm} from 'redux-form';\r\nimport {connect} from  'react-redux';\r\n\r\nimport {CREATESTREAM} from '../../action/index';\r\n\r\nimport  FormStream from './formstream'\r\n\r\n\r\n\r\n\r\nclass Createstream extends Component {\r\n\r\n  \r\n   \r\n\r\n onsubmit=(formvalues) =>{\r\n       this.props.CREATESTREAM(formvalues)\r\n }\r\n\r\n    render() { \r\n        \r\n      \r\n        return (\r\n\r\n         <div>\r\n             <h3 className=\"Header mt-3 mb-3\">Create Stream</h3>\r\n             <FormStream onSubmit={this.onsubmit} />\r\n\r\n         </div>\r\n            \r\n         );\r\n    }\r\n}\r\n\r\n \r\n\r\n\r\nexport default connect(null,{CREATESTREAM})(Createstream )\r\n","D:\\stream project\\task4\\my-app\\src\\components\\stream\\notfound.jsx",[],"D:\\stream project\\task4\\my-app\\src\\reducer\\index.jsx",[],"D:\\stream project\\task4\\my-app\\src\\components\\googlebutton.jsx",["86"],"import React, { Component } from 'react';\r\nimport {connect}from 'react-redux';\r\nimport {SINGIN,SINGOUT} from'../action';\r\n\r\n\r\nclass Googleoauth extends Component {\r\n\r\n\r\ncomponentDidMount(){\r\n    window.gapi.load(\"auth2\", () => {\r\n        console.log(process.env.REACT_APP_GOOGLE_OAUTH2_CLIENT_ID)\r\n        window.gapi.auth2\r\n          .init({\r\n            client_id: process.env.REACT_APP_GOOGLE_OAUTH2_CLIENT_ID,\r\n            scope: \"email\",\r\n          }) .then(() => {\r\n            \r\n            this.auth = window.gapi.auth2.getAuthInstance()\r\n            this.onAuthChange(this.auth.isSignedIn.get())\r\n\r\n          \r\n            this.auth.isSignedIn.listen(this.onAuthChange)\r\n          })\r\n        })\r\n       \r\n}\r\n   onAuthChange=(isSignedIn) =>{\r\n  \r\n       if( isSignedIn){\r\n           this.props.SINGIN(this.auth.currentUser.get().getId())\r\n       }else{\r\n           this.props.SINGOUT()\r\n       }\r\n    \r\n   }\r\n   onSignIn=()=>{\r\n    this.auth.signIn()\r\n   }\r\n   onSignOUT=()=>{\r\n    this.auth.signOut()\r\n   }\r\n    \r\n   renderButton(){\r\n       if(this.props.isSignedIn===null){\r\n           return null\r\n       }\r\n     \r\n    if(this.props.isSignedIn===false){\r\n     \r\n        return ( <div onClick={this.onSignIn}> \r\n        \r\n            <button className=\"ui red google button\">\r\n            <i className=\"google icon\" />\r\n             SING IN\r\n            </button>\r\n            \r\n            </div> )\r\n\r\n    }\r\n   return(\r\n    <div onClick={this.onSignOUT}> \r\n  \r\n    <button className=\"ui red google button\">\r\n    <i className=\"google icon\" />\r\n     SING OUT\r\n    </button>\r\n    \r\n    </div>\r\n   )\r\n   }\r\n    render() { \r\n        return(\r\n      <React.Fragment>\r\n          {this.renderButton()}\r\n      </React.Fragment>\r\n    \r\n    )\r\n        }\r\n       \r\n}\r\nconst   mapStateToProps= (state) =>{\r\n  \r\n    return({isSignedIn:state.authReducer.isSingIN})\r\n} \r\n\r\n \r\nexport default connect(mapStateToProps,{SINGIN,SINGOUT}) (Googleoauth);","D:\\stream project\\task4\\my-app\\src\\reducer\\authreducer.jsx",[],"D:\\stream project\\task4\\my-app\\src\\action\\type.jsx",[],"D:\\stream project\\task4\\my-app\\src\\action\\index.jsx",["87"],"import {signin,signout,createstream,editstream,deletestream,fetchstream,fetchstreams} from './type';\r\nimport streamsApi from'../apis/stream';\r\nimport history from '../history';\r\n\r\n export const SINGIN=(userid) =>{\r\n\r\n    return {\r\n    type:signin,\r\n    payload:userid\r\n}\r\n    \r\n}\r\n\r\nexport const SINGOUT= ()=>{\r\n    return {\r\n        type:signout\r\n    }\r\n}\r\n\r\nexport const CREATESTREAM=(formvalues)=>\r\n\r\n   async (dispath,getState)=>{\r\n       let {userId}=getState().authReducer\r\n       \r\n       if(userId===null){\r\n           userId=\"null\"\r\n       }\r\n         const response=await streamsApi.post('/stream',{...formvalues,userId});\r\n         console.log(response)\r\n         dispath({type:createstream,payload:response.data})\r\n        history.push('/')\r\n    }\r\n\r\n\r\n    export const EDITSTREAM=(formvalues,id)=>\r\n\r\n    async (dispath)=>{\r\n          const response=await streamsApi.patch(`/stream/${id}`,formvalues);\r\n          dispath({type:editstream,payload:response.data})\r\n          history.push('/')\r\n     }\r\n     export const FETCHSTREAM=(id)=>\r\n\r\n   async (dispath)=>{\r\n       \r\n         const response=await streamsApi.get(`/stream/${id}`);\r\n         console.log(response)\r\n         dispath({type:fetchstream,payload:response.data})\r\n    }\r\n\r\n    export const FETCHSTREAMS=()=>\r\n\r\n    async (dispath)=>{\r\n          const response=await streamsApi.get(`/stream`);\r\n          dispath({type:fetchstreams,payload:response.data})\r\n     }\r\n    \r\n     export const DELETESTREAM=(id)=>\r\n\r\n     async (dispath)=>{\r\n           const response=await streamsApi.delete(`/stream/${id}`);\r\n           dispath({type:deletestream,payload:id})\r\n           history.push('/')\r\n      }\r\n\r\n\r\n \r\n\r\n\r\n","D:\\stream project\\task4\\my-app\\src\\apis\\stream.jsx",[],"D:\\stream project\\task4\\my-app\\src\\reducer\\reducerstream.jsx",[],"D:\\stream project\\task4\\my-app\\src\\history.js",[],"D:\\stream project\\task4\\my-app\\src\\components\\stream\\formstream.jsx",[],"D:\\stream project\\task4\\my-app\\src\\components\\model.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":42,"column":34,"nodeType":"98","messageId":"99","endLine":42,"endColumn":36},{"ruleId":"92","severity":1,"message":"100","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"101","line":2,"column":14,"nodeType":"94","messageId":"95","endLine":2,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":12,"column":9,"nodeType":"104","messageId":"105","endLine":16,"endColumn":19,"fix":"106"},{"ruleId":"92","severity":1,"message":"107","line":61,"column":18,"nodeType":"94","messageId":"95","endLine":61,"endColumn":26},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Field' is defined but never used.","'reduxForm' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"110","text":"111"},"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[456,458],"."]